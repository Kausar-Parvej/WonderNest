name: Deploy to Azure VM

on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
      
      - name: Add Azure VM to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Debug secrets (without exposing sensitive data)
        run: |
          echo "VM Host length: ${#AZURE_VM_HOST}"
          echo "VM User length: ${#AZURE_VM_USER}"
          echo "SSH Key length: ${#AZURE_VM_SSH_PRIVATE_KEY}"
          echo "VM Host: ${{ secrets.AZURE_VM_HOST }}"
          echo "VM User: ${{ secrets.AZURE_VM_USER }}"

      - name: Copy files to VM
        run: |
          scp -r . ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:/home/${{ secrets.AZURE_VM_USER }}/wondernest

      - name: Deploy on VM
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
            cd /home/${{ secrets.AZURE_VM_USER }}/wondernest
            export SPRING_DATASOURCE_URL="${{ secrets.SPRING_DATASOURCE_URL }}"
            export SPRING_DATASOURCE_USERNAME="${{ secrets.SPRING_DATASOURCE_USERNAME }}"
            export SPRING_DATASOURCE_PASSWORD="${{ secrets.SPRING_DATASOURCE_PASSWORD }}"
            export GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}"
            export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
            export OPENROUTER_API_KEY="${{ secrets.OPENROUTER_API_KEY }}"
            docker-compose -f docker-compose.deploy.yml down || true
            docker-compose -f docker-compose.deploy.yml pull
            docker-compose -f docker-compose.deploy.yml up --build -d
            docker-compose -f docker-compose.deploy.yml ps
          EOF 