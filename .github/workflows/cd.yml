name: Deploy to Azure VM

on:
  push:
    branches:
      - main
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'push' && github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
      
      - name: Setup SSH connection
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "mkdir -p ~/wondernest-deployment"
      
      - name: Copy project files
        run: |
          rsync -avz --delete --compress-level=6 --partial --inplace \
            --exclude='.git' --exclude='node_modules' --exclude='target' \
            --exclude='.github' --exclude='wondernest.tar.gz' --exclude='*.log' \
            --exclude='frontend/dist' \
            --exclude='**/.DS_Store' --exclude='**/.env.local' \
            ./ ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:~/wondernest-deployment/
      
      - name: Create environment file
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "cat > ~/wondernest-deployment/.env << 'EOF'
          SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
          EOF"
      
      - name: Stop existing containers
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
            cd ~/wondernest-deployment
            if [ -f docker-compose.deploy.yml ]; then
              docker-compose -f docker-compose.deploy.yml down --remove-orphans || true
            fi
            docker image prune -f --filter 'dangling=true' || true
          "
      
      - name: Build and deploy
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
            cd ~/wondernest-deployment
            export DOCKER_BUILDKIT=1
            export COMPOSE_DOCKER_CLI_BUILD=1
            docker-compose -f docker-compose.deploy.yml build --parallel --pull
            docker-compose -f docker-compose.deploy.yml up -d --remove-orphans
          "
      
      - name: Wait for services
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
            cd ~/wondernest-deployment
            timeout 60 bash -c '
              while true; do
                running=\$(docker ps --filter \"status=running\" --filter \"name=wondernest\" --format \"{{.Names}}\" | wc -l)
                if [ \$running -ge 3 ]; then
                  break
                fi
                sleep 5
              done
            ' || true
          "
      
      - name: Verify deployment
        run: |
          ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
            cd ~/wondernest-deployment
            docker-compose -f docker-compose.deploy.yml ps
            docker ps --filter 'name=wondernest'
          "
          
      - name: Test connectivity
        run: |
          curl -f http://${{ secrets.AZURE_VM_HOST }} || true
          curl -f http://${{ secrets.AZURE_VM_HOST }}/api/health || true